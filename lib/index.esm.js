class _Console{static DIR="";static getInfo(){try{throw(new Error).stack}catch(t){let e=t.split("\n")[3].trim();return e=e.replace(_Console.DIR,""),e}}set DIR(t){_Console.DIR=t}log(t,...e){const o=_Console.getInfo();console.log(...arguments,`${o}`)}assert(t,e,...o){const s=_Console.getInfo();console.assert(...arguments,`${s}`)}clear(){console.clear()}count(t){const e=_Console.getInfo();console.count(...arguments,`${e}`)}countReset(t){const e=_Console.getInfo();console.countReset(...arguments,`${e}`)}debug(t,...e){const o=_Console.getInfo();console.debug(...arguments,`${o}`)}dir(t,e){const o=_Console.getInfo();console.dir(...arguments,`${o}`)}dirxml(...t){const e=_Console.getInfo();console.dirxml(...arguments,`${e}`)}error(t,...e){const o=_Console.getInfo();console.error(...arguments,`${o}`)}group(...t){const e=_Console.getInfo();console.group(...arguments,`${e}`)}groupCollapsed(...t){const e=_Console.getInfo();console.groupCollapsed(...arguments,`${e}`)}groupEnd(){console.groupEnd()}info(t,...e){const o=_Console.getInfo();console.info(...arguments,`${o}`)}table(t,e){const o=_Console.getInfo();console.table(...arguments),console.log(`${o}`)}time(t){const e=_Console.getInfo();console.time(...arguments,`${e}`)}timeEnd(t){const e=_Console.getInfo();console.timeEnd(...arguments,`${e}`)}timeLog(t,...e){const o=_Console.getInfo();console.timeLog(...arguments,`${o}`)}timeStamp(t){const e=_Console.getInfo();console.timeStamp(...arguments,`${e}`)}trace(t,...e){const o=_Console.getInfo();console.trace(...arguments,`${o}`)}warn(t,...e){const o=_Console.getInfo();console.warn(...arguments,`${o}`)}Console;profile(t){const e=_Console.getInfo();console.profile(...arguments,`${e}`)}profileEnd(t){const e=_Console.getInfo();console.profileEnd(...arguments,`${e}`)}}const Console=new _Console;class T{static typeOf(t){return Object.prototype.toString.call(t).split(" ")[1].slice(0,-1).toLowerCase()}static isFn(t){return"function"==typeof t}static isObj(t){return"[object Object]"===Object.prototype.toString.call(t)}static isValidObj(t){return this.isObj(t)&&!!Object.keys(t).length}static isArray(t){return this.isFn(Array.isArray)?Array.isArray(t):"[object Array]"===Object.prototype.toString.call(t)}static isValidArray(t){return this.isArray(t)&&!!t.length}static isNum(t){return"number"==typeof t}static isStr(t){return"string"==typeof t}static isValidStr(t){return this.isStr(t)&&!!t.length}static isDate(t){return"[object Date]"===Object.prototype.toString.call(t)}}class Time{static datefmt(date,fmtPattern="Y-M-D:h-m-s",fmtModifier="/:"){if(!T.isDate(date))return"Unexpected parameter pass";let stageArr=fmtPattern.split(":").map(((t,e)=>t.split("-")));return date.getFullYear(),date.getMonth(),date.getDate(),date.getHours(),date.getMinutes(),date.getSeconds(),stageArr=stageArr.map(((stage2,index)=>{const mod=fmtModifier[index]?fmtModifier[index]:"-";return stage2.map((i=>eval(i))).join(mod)})),stageArr.join(" ")}}class Timer{static debounce(t,e){let o;return function(...s){void 0!==o&&(clearTimeout(o),o=void 0),o=setTimeout((()=>{t.apply(this,s),clearTimeout(o),o=void 0}),e)}}static throttle(t,e){let o;return function(...s){void 0===o&&(o=setTimeout((()=>{t.apply(this,s),clearTimeout(o),o=void 0}),e))}}}class Str{static rollingRandomString(t,e=!0,o=!1,s=!1,n=!1){let r="";e&&(r+="abcdefghijklmnopqrstuvwxyz"),o&&(r+="ABCDEFGHIJKLMNOPQRSTUVWXYZ"),s&&(r+="!@#$%^&*()_+-=[]{}|;:,.<>?"),n&&(r+="0123456789");let i="";for(let e=0;e<t;e++){i+=r[Math.floor(Math.random()*r.length)]}return i}}class Reg{static isPhone(t){return/^1[3456789]\d{9}$/.test(t)}static isEmail(t){return/^[a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+(\.[a-zA-Z0-9_-]+)+$/.test(t)}static isIdCard(t){return/(^\d{15}$)|(^\d{18}$)|(^\d{17}(\d|X|x)$)/.test(t)}static isPassword(t,e,o){return new RegExp(`^[a-zA-Z0-9_]{${e},${o}}$`).test(t)}static isUrl(t){return/^http(s)?:\/\/([\w-]+\.)+[\w-]+(\/[\w- ./?%&=]*)?$/.test(t)}static isIp(t){return/^(25[0-5]|2[0-4]\d|1\d{2}|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d{2}|[1-9]?\d)){3}$/.test(t)}static isPostalCode(t){return/^[1-9]\d{5}$/.test(t)}static isChinese(t){return/^[\u4e00-\u9fa5]+$/.test(t)}}class Subscribe{callBackFns=[];eventsMap=new Map;add(t,e){const o=this.get(t);T.isValidArray(o)?this.eventsMap.set(t,[e,...o]):this.eventsMap.set(t,[e])}get(t){return this.eventsMap.get(t)||[]}del(t){return this.eventsMap.delete(t)}}class EventBus{subscribe;constructor(){this.subscribe=new Subscribe}fire(t,e){this.subscribe.get(t).forEach((t=>t(e)))}on(t,e,o=this){this.subscribe.add(t,e.bind(o))}off(t){return this.subscribe.del(t)}once(t){}hasEvent(t){return this.subscribe.eventsMap.has(t)}}export{Console,EventBus,Reg,Str,T,Time,Timer};
